I"d˜<h1 id="—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è-–º–∞—Å—Å–∏–≤–æ–≤-–∏-–æ–±—ä–µ–∫—Ç–æ–≤">–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤</h1>

<p><br /></p>

<h3 id="1-each">1. Each</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">products</span> <span class="o">=</span> <span class="p">{</span>
  <span class="mi">1</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Product 1</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="mi">2</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Product 2</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">products</span><span class="p">,</span> <span class="p">(</span><span class="nx">product</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">product</span><span class="p">,</span> <span class="nx">key</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">products</span> <span class="o">=</span> <span class="p">{</span>
  <span class="mi">1</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Product 1</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="mi">2</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Product 2</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">(</span><span class="nx">product</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">product</span><span class="p">,</span> <span class="nx">index</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">products</span> <span class="o">=</span> <span class="p">{</span>
  <span class="mi">1</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Product 1</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="mi">2</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Product 2</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="kd">let</span> <span class="nx">result</span> <span class="o">=</span> <span class="p">[];</span>

<span class="nx">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">products</span><span class="p">,</span> <span class="p">(</span><span class="nx">product</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">result</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">product</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="2-map-–ø—Ä–µ–¥–ø–æ—á–∏—Ç–µ–ª—å–Ω–µ–µ-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å-—á–µ–º-each">2. Map (–ü—Ä–µ–¥–ø–æ—á–∏—Ç–µ–ª—å–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, —á–µ–º each)</h3>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">newLodashArr</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">map</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">item</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">newLodashArr</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">User 1</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">User 2</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">User 3</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="c1">// const ids = _.map(users, (user) =&gt; {</span>
<span class="c1">//   return user.id;</span>
<span class="c1">// });</span>

<span class="c1">// –¢–∞–∫ –ª—É—á—à–µ</span>
<span class="kd">const</span> <span class="nx">ids</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ids</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">{</span>
  <span class="mi">1</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">User 1</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="mi">2</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">User 2</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="mi">3</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">User 3</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">ids</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">,</span> <span class="nx">id</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nb">Number</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">ids</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="3-—Å–¥–µ–ª–∞–π-—Å–∞–º---map">3. –°–¥–µ–ª–∞–π —Å–∞–º - map</h3>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">first_name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">'</span><span class="s1">inactive</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">first_name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">status</span><span class="p">:</span> <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">first_name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">normalizeUsers</span> <span class="o">=</span> <span class="p">(</span><span class="nx">users</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">id</span><span class="p">:</span> <span class="nx">user</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span>
      <span class="na">firstName</span><span class="p">:</span> <span class="nx">user</span><span class="p">.</span><span class="nx">first_name</span><span class="p">,</span>
      <span class="na">isActive</span><span class="p">:</span> <span class="nx">user</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">active</span><span class="dl">'</span><span class="p">,</span>
    <span class="p">};</span>
  <span class="p">});</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">normalizeUsers</span><span class="p">(</span><span class="nx">users</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>result [
  { id: 1, firstName: 'John', isActive: true },
  { id: 2, firstName: 'Mike', isActive: false },
  { id: 3, firstName: 'Bill', isActive: true }
]
</code></pre></div></div>

<p><br /></p>

<h3 id="4-filter">4. Filter</h3>

<p>–í–æ–∑–≤—Ä–∞—â–∞–µ–º boolean</p>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">filter</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">item</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">user</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="c1">// const result = _.filter(users, "isActive")</span>
<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">[</span><span class="dl">'</span><span class="s1">name</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">]);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<p><strong>–í–æ–∑–≤—Ä–∞–∑–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤!</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">products</span> <span class="o">=</span> <span class="p">{</span>
  <span class="mi">1</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Milk</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">price</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="mi">2</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Meat</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">price</span><span class="p">:</span> <span class="mi">300</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">products</span><span class="p">,</span> <span class="p">(</span><span class="nx">product</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">product</span><span class="p">.</span><span class="nx">price</span> <span class="o">&gt;</span> <span class="mi">150</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="5-—Å–¥–µ–ª–∞–π-—Å–∞–º---filter">5. –°–¥–µ–ª–∞–π —Å–∞–º - filter</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">products</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">milk</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">price</span><span class="p">:</span> <span class="dl">'</span><span class="s1">$1</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">bread</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">price</span><span class="p">:</span> <span class="dl">'</span><span class="s1">$2</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">meat</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">price</span><span class="p">:</span> <span class="dl">'</span><span class="s1">$3</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">searchProducts</span> <span class="o">=</span> <span class="p">(</span><span class="nx">products</span><span class="p">,</span> <span class="nx">searchedValue</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">products</span><span class="p">,</span> <span class="p">(</span><span class="nx">product</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="c1">// return product.name.includes(searchedValue)</span>
    <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">product</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span> <span class="nx">searchedValue</span><span class="p">);</span>
  <span class="p">});</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">searchProducts</span><span class="p">(</span><span class="nx">products</span><span class="p">,</span> <span class="dl">'</span><span class="s1">m</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>result [
  { id: 1, name: 'milk', price: '$1' },
  { id: 3, name: 'meat', price: '$3' }
]
</code></pre></div></div>

<p><br /></p>

<h3 id="6-find">6. Find</h3>

<p>–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π –∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç. –ù–µ –º–∞—Å—Å–∏–≤!
–ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">user</span><span class="p">.</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="7-—É–¥–∞–ª–µ–Ω–∏–µ-—ç–ª–µ–º–µ–Ω—Ç–æ–≤">7. –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">without</span><span class="p">(</span><span class="nx">arr</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">arr</span><span class="dl">'</span><span class="p">,</span> <span class="nx">arr</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<p><strong>–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å remove!</strong>
(–¢.–∫. –æ–Ω –º—É—Ç–∏—Ä—É–µ—Ç )</p>

<p>–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">2</span> <span class="p">}];</span>
<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">arr</span><span class="p">,</span> <span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">element</span><span class="p">.</span><span class="nx">id</span> <span class="o">===</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">arr</span><span class="dl">'</span><span class="p">,</span> <span class="nx">arr</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<p><strong>–ù—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å reject.</strong></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="na">id</span><span class="p">:</span> <span class="mi">2</span> <span class="p">}];</span>
<span class="c1">// const result = _.reject(arr, (element) =&gt; {</span>
<span class="c1">//   return element.id === 1</span>
<span class="c1">// });</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">arr</span><span class="p">,</span> <span class="p">[</span><span class="dl">'</span><span class="s1">id</span><span class="dl">'</span><span class="p">,</span> <span class="mi">1</span><span class="p">]);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">arr</span><span class="dl">'</span><span class="p">,</span> <span class="nx">arr</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="8-—Å–¥–µ–ª–∞–π-—Å–∞–º---reject">8. –°–¥–µ–ª–∞–π —Å–∞–º - reject</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">110</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">40</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">getPopularUsers</span> <span class="o">=</span> <span class="p">(</span><span class="nx">users</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">!</span><span class="nx">user</span><span class="p">.</span><span class="nx">isActive</span> <span class="o">||</span> <span class="nx">user</span><span class="p">.</span><span class="nx">likes</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span>
  <span class="p">});</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">getPopularUsers</span><span class="p">(</span><span class="nx">users</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<p>–ó–¥–µ—Å—å –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å filter</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">110</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">40</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">getPopularUsers</span> <span class="o">=</span> <span class="p">(</span><span class="nx">users</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">user</span><span class="p">.</span><span class="nx">isActive</span> <span class="o">&amp;&amp;</span> <span class="nx">user</span><span class="p">.</span><span class="nx">likes</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="p">;</span>
  <span class="p">});</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">getPopularUsers</span><span class="p">(</span><span class="nx">users</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="9-every-–∏-some">9. Every –∏ some</h3>

<p>some - –µ—Å–ª–∏ —Ö–æ—Ç—å –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ–ª—É—á–∞–µ–º true, –∏–Ω–∞—á–µ false</p>

<p>every - –µ—Å–ª–∏ –∫–∞–∂–¥—ã–π true, –∏–Ω–∞—á–µ false</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">110</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">40</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="c1">// const isSomeActive = _.some(users, (user) =&gt; {</span>
<span class="c1">//   return user.isActive === true</span>
<span class="c1">// })</span>

<span class="kd">const</span> <span class="nx">isSomeActive</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">some</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">{</span> <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="na">likes</span><span class="p">:</span> <span class="mi">40</span> <span class="p">});</span>

<span class="kd">const</span> <span class="nx">isAllActive</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">every</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">user</span><span class="p">.</span><span class="nx">isActive</span> <span class="o">===</span> <span class="kc">true</span><span class="p">;</span>
<span class="p">});</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">isSomeActive</span><span class="dl">'</span><span class="p">,</span> <span class="nx">isSomeActive</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">isAllActive</span><span class="dl">'</span><span class="p">,</span> <span class="nx">isAllActive</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="10-—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞">10. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="c1">// const result = _.orderBy(users, ["likes"], ["desc"])</span>
<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">orderBy</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="p">[</span><span class="dl">'</span><span class="s1">likes</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">name</span><span class="dl">'</span><span class="p">],</span> <span class="p">[</span><span class="dl">'</span><span class="s1">desc</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">asc</span><span class="dl">'</span><span class="p">]);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="11-–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞">11. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">likes</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="c1">// const result = _.groupBy(users, () =&gt; {</span>
<span class="c1">//   return users.isActive;</span>
<span class="c1">// })</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">groupBy</span><span class="p">(</span><span class="nx">users</span><span class="p">,</span> <span class="dl">'</span><span class="s1">isActive</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="12-—Å—Ç—Ä–æ–∏–º-—Ü–µ–ø–æ—á–∫–∏">12. –°—Ç—Ä–æ–∏–º —Ü–µ–ø–æ—á–∫–∏</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">users</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">age</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Mike</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">age</span><span class="p">:</span> <span class="mi">27</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Bill</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">isActive</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">age</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">];</span>

<span class="kd">const</span> <span class="nx">getYoungestUserMessage</span> <span class="o">=</span> <span class="p">(</span><span class="nx">users</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">chain</span><span class="p">(</span><span class="nx">users</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="dl">'</span><span class="s1">isActive</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">orderBy</span><span class="p">([</span><span class="dl">'</span><span class="s1">age</span><span class="dl">'</span><span class="p">])</span>
    <span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">user</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">return</span> <span class="nx">user</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> is </span><span class="dl">'</span> <span class="o">+</span> <span class="nx">user</span><span class="p">.</span><span class="nx">age</span><span class="p">;</span>
    <span class="p">})</span>
    <span class="p">.</span><span class="nx">head</span><span class="p">()</span>
    <span class="p">.</span><span class="nx">value</span><span class="p">();</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">getYoungestUserMessage</span><span class="p">(</span><span class="nx">users</span><span class="p">);</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="13-–ø–æ–ª—É—á–µ–Ω–∏–µ-—á–∞—Å—Ç–µ–π-–º–∞—Å—Å–∏–≤–∞">13. –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Å—Ç–µ–π –º–∞—Å—Å–∏–≤–∞</h3>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">chain</span><span class="p">(</span><span class="nx">numbers</span><span class="p">).</span><span class="nx">head</span><span class="p">().</span><span class="nx">value</span><span class="p">();</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">_</span><span class="p">.</span><span class="nx">tail</span><span class="p">(</span><span class="nx">numbers</span><span class="p">));</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">foo</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">chain</span><span class="p">(</span><span class="nx">numbers</span><span class="p">).</span><span class="nx">tail</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="dl">''</span><span class="p">).</span><span class="nx">value</span><span class="p">();</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">result</span><span class="dl">'</span><span class="p">,</span> <span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">_</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">lodash</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">last</span><span class="dl">'</span><span class="p">,</span> <span class="nx">_</span><span class="p">.</span><span class="nx">last</span><span class="p">(</span><span class="nx">numbers</span><span class="p">));</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">initial</span><span class="dl">'</span><span class="p">,</span> <span class="nx">_</span><span class="p">.</span><span class="nx">initial</span><span class="p">(</span><span class="nx">numbers</span><span class="p">));</span>
</code></pre></div></div>
:ET